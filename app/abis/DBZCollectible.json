{
  "contractName": "DBZCollectible",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cards",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "birthTime",
          "type": "uint64"
        },
        {
          "name": "cardType",
          "type": "string"
        },
        {
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cardID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cardType",
          "type": "string"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getCards",
      "outputs": [
        {
          "components": [
            {
              "name": "id",
              "type": "uint256"
            },
            {
              "name": "birthTime",
              "type": "uint64"
            },
            {
              "name": "cardType",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cardType",
          "type": "string"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cardType\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cards\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"birthTime\",\"type\":\"uint64\"},{\"name\":\"cardType\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getCards\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"birthTime\",\"type\":\"uint64\"},{\"name\":\"cardType\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cardID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cardType\",\"type\":\"string\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jose/projects/blockchain/dbz-cards/src/contracts/DBZCollectible.sol\":\"DBZCollectible\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jose/projects/blockchain/dbz-cards/src/contracts/DBZCollectible.sol\":{\"keccak256\":\"0x7ee00d8a424d709389ef8e32d3d306e2b0daa63b32f0a8c4fc73d7cd1518c56b\",\"urls\":[\"bzzr://508422168861d50aaa6bd66eece3e55798a1672cf74318379f77b41735b75406\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzzr://07dffd4225b87bb0aa8d02cfdb04640c2e02e59b35143accd0dd757775449c61\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzzr://bb2f66d9db67f855132a36c30e210384ce20ef9ccdc203489138f6ed2dd8fae8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzzr://be001877b93536bd80b4ebf39bf5cd56ae5c294ffe5f35c34e26123646782562\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzzr://c05fd4bec1bdd4719ca843db39522d8710d81cbf5022a9950009cd18c504985c\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzzr://ec6e4e4e1b56ccdba7c8e2826c955a097577020381d6200148d9f42585090559\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b4114610389578063a22cb465146103a7578063b0df9e53146103c3578063b88d4fde146103e1578063c87b56dd146103fd578063e985e9c51461042d57610137565b80636352211e146102a85780636c0360eb146102d857806370a08231146102f657806378d0df50146103265780638dc107681461035657610137565b806318160ddd116100ff57806318160ddd146101f257806323b872dd146102105780632f745c591461022c57806342842e0e1461025c5780634f6ccce71461027857610137565b806301ffc9a71461013c578063056b01ce1461016c57806306fdde0314610188578063081812fc146101a6578063095ea7b3146101d6575b600080fd5b6101566004803603610151919081019061255f565b61045d565b604051610163919061307a565b60405180910390f35b610186600480360361018191908101906125b1565b6104c4565b005b6101906104e2565b60405161019d9190613095565b60405180910390f35b6101c060048036036101bb9190810190612605565b610584565b6040516101cd9190612f7c565b60405180910390f35b6101f060048036036101eb9190810190612523565b61060b565b005b6101fa6107ca565b60405161020791906132b7565b60405180910390f35b61022a6004803603610225919081019061241d565b6107d7565b005b61024660048036036102419190810190612523565b610839565b60405161025391906132b7565b60405180910390f35b6102766004803603610271919081019061241d565b6108e6565b005b610292600480360361028d9190810190612605565b610906565b60405161029f91906132b7565b60405180910390f35b6102c260048036036102bd9190810190612605565b610974565b6040516102cf9190612f7c565b60405180910390f35b6102e0610a28565b6040516102ed9190613095565b60405180910390f35b610310600480360361030b91908101906123b8565b610aca565b60405161031d91906132b7565b60405180910390f35b610340600480360361033b9190810190612605565b610b8b565b60405161034d9190612f7c565b60405180910390f35b610370600480360361036b9190810190612605565b610bbe565b60405161038094939291906132d2565b60405180910390f35b610391610ca9565b60405161039e9190613095565b60405180910390f35b6103c160048036036103bc91908101906124e7565b610d4b565b005b6103cb610ece565b6040516103d89190613058565b60405180910390f35b6103fb60048036036103f6919081019061246c565b611015565b005b61041760048036036104129190810190612605565b611079565b6040516104249190613095565b60405180910390f35b610447600480360361044291908101906123e1565b6111c3565b604051610454919061307a565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006104d1338484611257565b90506104dd33826113a9565b505050565b606060098054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b600061058f826113ca565b15156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c7906131f7565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061061682610974565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068090613257565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106a861143c565b73ffffffffffffffffffffffffffffffffffffffff1614806106d757506106d6816106d161143c565b6111c3565b5b1515610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f90613177565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b6107e86107e261143c565b82611444565b1515610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082090613277565b60405180910390fd5b610834838383611524565b505050565b600061084483610aca565b82101515610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906130b7565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156108d357fe5b9060005260206000200154905092915050565b61090183838360405180602001604052806000815250611015565b505050565b60006109106107ca565b82101515610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90613297565b60405180910390fd5b60078281548110151561096257fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a16906131b7565b60405180910390fd5b80915050919050565b6060600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac05780601f10610a9557610100808354040283529160200191610ac0565b820191906000526020600020905b815481529060010190602001808311610aa357829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3490613197565b60405180910390fd5b610b84600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611548565b9050919050565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d81815481101515610bcd57fe5b90600052602060002090600402016000915090508060000154908060010160009054906101000a900467ffffffffffffffff1690806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c995780601f10610c6e57610100808354040283529160200191610c99565b820191906000526020600020905b815481529060010190602001808311610c7c57829003601f168201915b5050505050908060030154905084565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d415780601f10610d1657610100808354040283529160200191610d41565b820191906000526020600020905b815481529060010190602001808311610d2457829003601f168201915b5050505050905090565b610d5361143c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90613137565b60405180910390fd5b8060046000610dd061143c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e7d61143c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ec2919061307a565b60405180910390a35050565b6060600d805480602002602001604051908101604052809291908181526020016000905b8282101561100c5783829060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fea5780601f10610fbf57610100808354040283529160200191610fea565b820191906000526020600020905b815481529060010190602001808311610fcd57829003601f168201915b5050505050815260200160038201548152505081526020019060010190610ef2565b50505050905090565b61102661102061143c565b83611444565b1515611067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105e90613277565b60405180910390fd5b61107384848484611556565b50505050565b6060611084826113ca565b15156110c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bc90613237565b60405180910390fd5b6060600c60008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561116e5780601f106111435761010080835404028352916020019161116e565b820191906000526020600020905b81548152906001019060200180831161115157829003601f168201915b5050505050905060008151141561119757604051806020016040528060008152509150506111be565b600b816040516020016111ab929190612f58565b6040516020818303038152906040529150505b919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080835111151561126857600080fd5b60008211151561127757600080fd5b600e600081548092919060010191905055506112916121a5565b6040518060800160405280600e5481526020014267ffffffffffffffff168152602001858152602001848152509050600d81908060018154018082558091505090600182039060005260206000209060040201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160020190805190602001906113439291906121d7565b50606082015181600301555050507f47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba985600e54866040516113869392919061301a565b60405180910390a161139c600086600e546115b4565b600e549150509392505050565b6113b3828261171c565b6113bd82826118d2565b6113c681611999565b5050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600061144f826113ca565b1515611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148790613157565b60405180910390fd5b600061149b83610974565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061150a57508373ffffffffffffffffffffffffffffffffffffffff166114f284610584565b73ffffffffffffffffffffffffffffffffffffffff16145b8061151b575061151a81856111c3565b5b91505092915050565b61152f8383836119e5565b6115398382611c18565b61154382826118d2565b505050565b600081600001549050919050565b611561848484611524565b61156d84848484611dbc565b15156115ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a5906130d7565b60405180910390fd5b50505050565b601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050555081600f600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156116dc57601060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055505b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83838360405161170f93929190612fe3565b60405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561178e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611785906131d7565b60405180910390fd5b611797816113ca565b1515156117d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d0906130f7565b60405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611872600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fba565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b8273ffffffffffffffffffffffffffffffffffffffff16611a0582610974565b73ffffffffffffffffffffffffffffffffffffffff16141515611a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5490613217565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611acf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac690613117565b60405180910390fd5b611ad881611fd0565b611b1f600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612090565b611b66600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fba565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c706001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506120b390919063ffffffff16565b90506000600660008481526020019081526020016000205490508181141515611d63576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611ce157fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d3b57fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611db59190612257565b5050505050565b6000611ddd8473ffffffffffffffffffffffffffffffffffffffff166120fd565b1515611dec5760019050611fb2565b600060608573ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1663150b7a02905060e01b611e3061143c565b898888604051602401611e469493929190612f97565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611eb09190612f41565b6000604051808303816000865af19150503d8060008114611eed576040519150601f19603f3d011682016040523d82523d6000602084013e611ef2565b606091505b5091509150811515611f4c57600081511115611f115780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f43906130d7565b60405180910390fd5b600081806020019051611f629190810190612588565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561208d5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6120a8600182600001546120b390919063ffffffff16565b816000018190555050565b60006120f583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612148565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561213f57506000801b8214155b92505050919050565b60008383111582901515612192576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121899190613095565b60405180910390fd5b5060008385039050809150509392505050565b604051806080016040528060008152602001600067ffffffffffffffff16815260200160608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061221857805160ff1916838001178555612246565b82800160010185558215612246579182015b8281111561224557825182559160200191906001019061222a565b5b5090506122539190612283565b5090565b81548183558181111561227e5781836000526020600020918201910161227d9190612283565b5b505050565b6122a591905b808211156122a1576000816000905550600101612289565b5090565b90565b60006122b482356134c3565b905092915050565b60006122c882356134d5565b905092915050565b60006122dc82356134e1565b905092915050565b60006122f082516134e1565b905092915050565b600082601f830112151561230b57600080fd5b813561231e6123198261334b565b61331e565b9150808252602083016020830185838301111561233a57600080fd5b612345838284613537565b50505092915050565b600082601f830112151561236157600080fd5b813561237461236f82613377565b61331e565b9150808252602083016020830185838301111561239057600080fd5b61239b838284613537565b50505092915050565b60006123b0823561352d565b905092915050565b6000602082840312156123ca57600080fd5b60006123d8848285016122a8565b91505092915050565b600080604083850312156123f457600080fd5b6000612402858286016122a8565b9250506020612413858286016122a8565b9150509250929050565b60008060006060848603121561243257600080fd5b6000612440868287016122a8565b9350506020612451868287016122a8565b9250506040612462868287016123a4565b9150509250925092565b6000806000806080858703121561248257600080fd5b6000612490878288016122a8565b94505060206124a1878288016122a8565b93505060406124b2878288016123a4565b925050606085013567ffffffffffffffff8111156124cf57600080fd5b6124db878288016122f8565b91505092959194509250565b600080604083850312156124fa57600080fd5b6000612508858286016122a8565b9250506020612519858286016122bc565b9150509250929050565b6000806040838503121561253657600080fd5b6000612544858286016122a8565b9250506020612555858286016123a4565b9150509250929050565b60006020828403121561257157600080fd5b600061257f848285016122d0565b91505092915050565b60006020828403121561259a57600080fd5b60006125a8848285016122e4565b91505092915050565b600080604083850312156125c457600080fd5b600083013567ffffffffffffffff8111156125de57600080fd5b6125ea8582860161234e565b92505060206125fb858286016123a4565b9150509250929050565b60006020828403121561261757600080fd5b6000612625848285016123a4565b91505092915050565b600061263a8383612ea2565b905092915050565b61264b81613467565b82525050565b61265a81613455565b82525050565b600061266b826133c2565b61267581856133fb565b935083602082028501612687856133a3565b60005b848110156126c05783830388526126a283835161262e565b92506126ad826133ee565b915060208801975060018101905061268a565b508196508694505050505092915050565b6126da81613479565b82525050565b60006126eb826133cd565b6126f5818561340c565b9350612705818560208601613546565b61270e81613579565b840191505092915050565b6000612724826133cd565b61272e818561341d565b935061273e818560208601613546565b80840191505092915050565b6000612755826133e3565b61275f8185613439565b935061276f818560208601613546565b61277881613579565b840191505092915050565b600061278e826133e3565b612798818561344a565b93506127a8818560208601613546565b80840191505092915050565b60006127bf826133d8565b6127c98185613428565b93506127d9818560208601613546565b6127e281613579565b840191505092915050565b60006127f8826133d8565b6128028185613439565b9350612812818560208601613546565b61281b81613579565b840191505092915050565b6000815460018116600081146128435760018114612868576128ac565b607f6002830416612854818761344a565b955060ff19831686528086019350506128ac565b60028204612876818761344a565b9550612881856133b0565b60005b828110156128a357815481890152600182019150602081019050612884565b82880195505050505b505092915050565b60006128c1602b83613439565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b6000612927603283613439565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061298d601c83613439565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006129cd602483613439565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a33601983613439565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612a73602c83613439565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612ad9603883613439565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612b3f602a83613439565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ba5602983613439565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c0b602083613439565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612c4b602c83613439565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612cb1602983613439565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d17602f83613439565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000612d7d602183613439565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612de3603183613439565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000612e49602c83613439565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6000608083016000830151612eba6000860182612f05565b506020830151612ecd6020860182612f23565b5060408301518482036040860152612ee582826127b4565b9150506060830151612efa6060860182612f05565b508091505092915050565b612f0e816134a5565b82525050565b612f1d816134a5565b82525050565b612f2c816134af565b82525050565b612f3b816134af565b82525050565b6000612f4d8284612719565b915081905092915050565b6000612f648285612826565b9150612f708284612783565b91508190509392505050565b6000602082019050612f916000830184612651565b92915050565b6000608082019050612fac6000830187612642565b612fb96020830186612651565b612fc66040830185612f14565b8181036060830152612fd881846126e0565b905095945050505050565b6000606082019050612ff86000830186612651565b6130056020830185612651565b6130126040830184612f14565b949350505050565b600060608201905061302f6000830186612651565b61303c6020830185612f14565b818103604083015261304e818461274a565b9050949350505050565b600060208201905081810360008301526130728184612660565b905092915050565b600060208201905061308f60008301846126d1565b92915050565b600060208201905081810360008301526130af818461274a565b905092915050565b600060208201905081810360008301526130d0816128b4565b9050919050565b600060208201905081810360008301526130f08161291a565b9050919050565b6000602082019050818103600083015261311081612980565b9050919050565b60006020820190508181036000830152613130816129c0565b9050919050565b6000602082019050818103600083015261315081612a26565b9050919050565b6000602082019050818103600083015261317081612a66565b9050919050565b6000602082019050818103600083015261319081612acc565b9050919050565b600060208201905081810360008301526131b081612b32565b9050919050565b600060208201905081810360008301526131d081612b98565b9050919050565b600060208201905081810360008301526131f081612bfe565b9050919050565b6000602082019050818103600083015261321081612c3e565b9050919050565b6000602082019050818103600083015261323081612ca4565b9050919050565b6000602082019050818103600083015261325081612d0a565b9050919050565b6000602082019050818103600083015261327081612d70565b9050919050565b6000602082019050818103600083015261329081612dd6565b9050919050565b600060208201905081810360008301526132b081612e3c565b9050919050565b60006020820190506132cc6000830184612f14565b92915050565b60006080820190506132e76000830187612f14565b6132f46020830186612f32565b818103604083015261330681856127ed565b90506133156060830184612f14565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561334157600080fd5b8060405250919050565b600067ffffffffffffffff82111561336257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561338e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061346082613485565b9050919050565b600061347282613485565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006134ce8261350d565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613564578082015181840152602081019050613549565b83811115613573576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820e8e841d1966d10b9f0111dbd99c34e5f49f8780d106ab57579b87e4bffde56566c6578706572696d656e74616cf50037",
  "sourceMap": "132:1712:0:-;;;219:1;203:17;;675:170;8:9:-1;5:2;;;30:1;27;20:12;5:2;675:170:0;456:155:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:4;539:6;718:40:4;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::7;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;1357:51:8;1172:10;1376:31;;1357:18;;;:51;;:::i;:::-;920:4:10;912:5;:12;;;;;;;;;;;;:::i;:::-;;944:6;934:7;:16;;;;;;;;;;;;:::i;:::-;;1038:49;774:10;1057:29;;1038:18;;;:49;;:::i;:::-;840:254;;456:155:9;;748:24:0;;;;;;;;;;;;;;;;;;770:1;748:4;;;:24;;:::i;:::-;782:23;;;;;;;;;;;;;;;;;;803:1;782:4;;;:23;;:::i;:::-;815;;;;;;;;;;;;;;;;;;836:1;815:4;;;:23;;:::i;:::-;132:1712;;1442:190:4;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;1681:161:0:-;1749:8;1760:43;1774:10;1786:8;1796:6;1760:13;;;:43;;:::i;:::-;1749:54;;1813:22;1819:10;1831:3;1813:5;;;:22;;:::i;:::-;1681:161;;;:::o;1150:525::-;1244:4;1298:1;1278:9;1272:23;:27;1264:36;;;;;;;;1327:1;1318:6;:10;1310:19;;;;;;;;1340:5;;:7;;;;;;;;;;;;;1358:21;;:::i;:::-;1382:137;;;;;;;;1407:5;;1382:137;;;;1444:3;1382:137;;;;;;1472:9;1382:137;;;;1502:6;1382:137;;;1358:161;;1530:5;1541:7;1530:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1530:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1565:33;1573:6;1581:5;;1588:9;1565:33;;;;;;;;;;;;;;;;;1609:36;1627:1;1631:6;1639:5;;1609:9;;;:36;;:::i;:::-;1663:5;;1656:12;;;1150:525;;;;;:::o;3670:196:8:-;3733:24;3745:2;3749:7;3733:11;;;;;:24;;:::i;:::-;3768:40;3796:2;3800:7;3768:27;;;:40;;:::i;:::-;3819;3851:7;3819:31;;;:40;;:::i;:::-;3670:196;;:::o;851:293:0:-;935:19;:24;955:3;935:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;1000:3;971:16;:26;988:8;971:26;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1035:1;1018:19;;:5;:19;;;;1014:78;;;1053:19;:26;1073:5;1053:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;1014:78;1107:30;1116:5;1123:3;1128:8;1107:30;;;;;;;;;;;;;;;;;851:293;;;:::o;11714:327:7:-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;;;:16;;:::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;;;;;:33;;:::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;5128:183:8:-;5241:12;:16;5254:2;5241:16;;;;;;;;;;;;;;;:23;;;;5212:17;:26;5230:7;5212:26;;;;;;;;;;;:52;;;;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;5296:7;5274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5274:30:8;;;;;;;;;;;;;;;;;;;;;;5128:183;;:::o;5506:161::-;5609:10;:17;;;;5582:15;:24;5598:7;5582:24;;;;;;;;;;;:44;;;;5636:10;5652:7;5636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5636:24:8;;;;;;;;;;;;;;;;;;;;;;5506:161;:::o;9158:152:7:-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;1183:178:3:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;132:1712:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:120:-1:-;88:31;113:5;88:31;;;83:3;76:44;70:55;;;132:347;;244:39;277:5;244:39;;;295:71;359:6;354:3;295:71;;;288:78;;371:52;416:6;411:3;404:4;397:5;393:16;371:52;;;444:29;466:6;444:29;;;439:3;435:39;428:46;;224:255;;;;;;487:364;;647:67;711:2;706:3;647:67;;;640:74;;747:66;743:1;738:3;734:11;727:87;842:2;837:3;833:12;826:19;;633:218;;;;860:364;;1020:67;1084:2;1079:3;1020:67;;;1013:74;;1120:66;1116:1;1111:3;1107:11;1100:87;1215:2;1210:3;1206:12;1199:19;;1006:218;;;;1233:364;;1393:67;1457:2;1452:3;1393:67;;;1386:74;;1493:66;1489:1;1484:3;1480:11;1473:87;1588:2;1583:3;1579:12;1572:19;;1379:218;;;;1605:120;1688:31;1713:5;1688:31;;;1683:3;1676:44;1670:55;;;1732:435;;1906:2;1895:9;1891:18;1883:26;;1920:71;1988:1;1977:9;1973:17;1964:6;1920:71;;;2002:72;2070:2;2059:9;2055:18;2046:6;2002:72;;;2085;2153:2;2142:9;2138:18;2129:6;2085:72;;;1877:290;;;;;;;2174:523;;2368:2;2357:9;2353:18;2345:26;;2382:71;2450:1;2439:9;2435:17;2426:6;2382:71;;;2464:72;2532:2;2521:9;2517:18;2508:6;2464:72;;;2584:9;2578:4;2574:20;2569:2;2558:9;2554:18;2547:48;2609:78;2682:4;2673:6;2609:78;;;2601:86;;2339:358;;;;;;;2704:407;;2895:2;2884:9;2880:18;2872:26;;2945:9;2939:4;2935:20;2931:1;2920:9;2916:17;2909:47;2970:131;3096:4;2970:131;;;2962:139;;2866:245;;;;3118:407;;3309:2;3298:9;3294:18;3286:26;;3359:9;3353:4;3349:20;3345:1;3334:9;3330:17;3323:47;3384:131;3510:4;3384:131;;;3376:139;;3280:245;;;;3532:407;;3723:2;3712:9;3708:18;3700:26;;3773:9;3767:4;3763:20;3759:1;3748:9;3744:17;3737:47;3798:131;3924:4;3798:131;;;3790:139;;3694:245;;;;3946:92;;4027:5;4021:12;4011:22;;4005:33;;;;4046:163;;4161:6;4156:3;4149:19;4198:4;4193:3;4189:14;4174:29;;4142:67;;;;;4217:105;;4286:31;4311:5;4286:31;;;4275:42;;4269:53;;;;4329:128;;4409:42;4402:5;4398:54;4387:65;;4381:76;;;;4464:79;;4533:5;4522:16;;4516:27;;;;4551:268;4616:1;4623:101;4637:6;4634:1;4631:13;4623:101;;;4713:1;4708:3;4704:11;4698:18;4694:1;4689:3;4685:11;4678:39;4659:2;4656:1;4652:10;4647:15;;4623:101;;;4739:6;4736:1;4733:13;4730:2;;;4804:1;4795:6;4790:3;4786:16;4779:27;4730:2;4600:219;;;;;4827:97;;4915:2;4911:7;4906:2;4899:5;4895:14;4891:28;4881:38;;4875:49;;;;132:1712:0;;;;;;;",
  "deployedSourceMap": "132:1712:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;132:1712:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1681:161:0;;;;;;;;;;;;;;;;:::i;:::-;;1199:83:10;;;:::i;:::-;;;;;;;;;;;;;;;;4283:200:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3583:415;;;;;;;;;;;;;;;;:::i;:::-;;2171:94:8;;;:::i;:::-;;;;;;;;;;;;;;;;5929:287:7;;;;;;;;;;;;;;;;:::i;:::-;;1789:229:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6865:132:7;;;;;;;;;;;;;;;;:::i;:::-;;2603:196:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2939:223:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3387:89:10;;;:::i;:::-;;;;;;;;;;;;;;;;2513:207:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;226:51:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;176:21;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1391:87:10;;;:::i;:::-;;;;;;;;;;;;;;;;4776:249:7;;;;;;;;;;;;;;;;:::i;:::-;;586:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;7720:269:7;;;;;;;;;;;;;;;;:::i;:::-;;1781:545:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5347:145:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;915:133:4;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1681:161:0:-;1749:8;1760:43;1774:10;1786:8;1796:6;1760:13;:43::i;:::-;1749:54;;1813:22;1819:10;1831:3;1813:5;:22::i;:::-;1681:161;;;:::o;1199:83:10:-;1238:13;1270:5;1263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:83;:::o;4283:200:7:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;;;;;;;;;;;;;;;;;;;4452:15;:24;4468:7;4452:24;;;;;;;;;;;;;;;;;;;;;4445:31;;4283:200;;;:::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;3696:11;;:2;:11;;;;3688:57;;;;;;;;;;;;;;;;;;;;;;;;3780:5;3764:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3764:62;3756:152;;;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3983:7;3979:2;3963:28;;3972:5;3963:28;;;;;;;;;;;;3583:415;;;:::o;2171:94:8:-;2215:7;2241:10;:17;;;;2234:24;;2171:94;:::o;5929:287:7:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:8:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;;;;;;;;;;;;;;;;;;;;;1985:12;:19;1998:5;1985:19;;;;;;;;;;;;;;;2005:5;1985:26;;;;;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;6865:132:7:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;:::-;6865:132;;;:::o;2603:196:8:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;2939:223:7:-;2994:7;3013:13;3029:11;:20;3041:7;3029:20;;;;;;;;;;;;;;;;;;;;;3013:36;;3084:1;3067:19;;:5;:19;;;;3059:73;;;;;;;;;;;;;;;;;;;;;;;;3150:5;3143:12;;;2939:223;;;:::o;3387:89:10:-;3429:13;3461:8;3454:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3387:89;:::o;2513:207:7:-;2568:7;2612:1;2595:19;;:5;:19;;;;2587:74;;;;;;;;;;;;;;;;;;;;;;;;2679:34;:17;:24;2697:5;2679:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2672:41;;2513:207;;;:::o;226:51:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;176:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1391:87:10:-;1432:13;1464:7;1457:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:87;:::o;4776:249:7:-;4861:12;:10;:12::i;:::-;4855:18;;:2;:18;;;;4847:56;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;4914:32;;;;;;;;;;;;;;;:36;4947:2;4914:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5005:2;4976:42;;4991:12;:10;:12::i;:::-;4976:42;;;5009:8;4976:42;;;;;;;;;;;;;;;4776:249;;:::o;586:83:0:-;623:15;657:5;650:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:83;:::o;7720:269:7:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1781:545:10:-;1839:13;1872:16;1880:7;1872;:16::i;:::-;1864:76;;;;;;;;;;;;;;;;;;;;;;;;1951:23;1977:10;:19;1988:7;1977:19;;;;;;;;;;;1951:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:1;2110:9;2104:23;:28;2100:220;;;2148:9;;;;;;;;;;;;;;;;;2100:220;2288:8;2298:9;2271:37;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2271:37:10;;;2257:52;;;1781:545;;;;:::o;5347:145:7:-;5427:4;5450:18;:25;5469:5;5450:25;;;;;;;;;;;;;;;:35;5476:8;5450:35;;;;;;;;;;;;;;;;;;;;;;;;;5443:42;;5347:145;;;;:::o;1150:525:0:-;1244:4;1298:1;1278:9;1272:23;:27;1264:36;;;;;;;;1327:1;1318:6;:10;1310:19;;;;;;;;1340:5;;:7;;;;;;;;;;;;;1358:21;;:::i;:::-;1382:137;;;;;;;;1407:5;;1382:137;;;;1444:3;1382:137;;;;;;1472:9;1382:137;;;;1502:6;1382:137;;;1358:161;;1530:5;1541:7;1530:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1530:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1565:33;1573:6;1581:5;;1588:9;1565:33;;;;;;;;;;;;;;;;;1609:36;1627:1;1631:6;1639:5;;1609:9;:36::i;:::-;1663:5;;1656:12;;;1150:525;;;;;:::o;3670:196:8:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;:::-;3670:196;;:::o;9158:152:7:-;9215:4;9231:13;9247:11;:20;9259:7;9247:20;;;;;;;;;;;;;;;;;;;;;9231:36;;9301:1;9284:19;;:5;:19;;;;9277:26;;;9158:152;;;:::o;788:96:2:-;833:15;867:10;860:17;;788:96;:::o;9671:329:7:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;9905:16;;:7;:16;;;:51;;;;9949:7;9925:31;;:20;9937:7;9925:11;:20::i;:::-;:31;;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9905:87;9897:96;;;9671:329;;;;:::o;3174:239:8:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;:::-;3174:239;;;:::o;1065:112:3:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;8694:269:7:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;;;;;;;;;;;;;;;;;;;8694:269;;;;:::o;851:293:0:-;935:19;:24;955:3;935:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;1000:3;971:16;:26;988:8;971:26;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1035:1;1018:19;;:5;:19;;;;1014:78;;;1053:19;:26;1073:5;1053:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;1014:78;1107:30;1116:5;1123:3;1128:8;1107:30;;;;;;;;;;;;;;;;;851:293;;;:::o;11714:327:7:-;11799:1;11785:16;;:2;:16;;;;11777:61;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;;;;;;;;;;;;;;;;;;;;11940:2;11917:11;:20;11929:7;11917:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11952:33;:17;:21;11970:2;11952:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12026:7;12022:2;12001:33;;12018:1;12001:33;;;;;;;;;;;;11714:327;;:::o;5128:183:8:-;5241:12;:16;5254:2;5241:16;;;;;;;;;;;;;;;:23;;;;5212:17;:26;5230:7;5212:26;;;;;;;;;;;:52;;;;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;5296:7;5274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5274:30:8;;;;;;;;;;;;;;;;;;;;;;5128:183;;:::o;5506:161::-;5609:10;:17;;;;5582:15;:24;5598:7;5582:24;;;;;;;;;;;:44;;;;5636:10;5652:7;5636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5636:24:8;;;;;;;;;;;;;;;;;;;;;;5506:161;:::o;13281:447:7:-;13394:4;13374:24;;:16;13382:7;13374;:16::i;:::-;:24;;;13366:78;;;;;;;;;;;;;;;;;;;;;;;;13476:1;13462:16;;:2;:16;;;;13454:65;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;13564:35;:17;:23;13582:4;13564:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13609:33;:17;:21;13627:2;13609:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13676:2;13653:11;:20;13665:7;13653:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13713:7;13709:2;13694:27;;13703:4;13694:27;;;;;;;;;;;;13281:447;;;:::o;6284:1128:8:-;6546:22;6571:32;6601:1;6571:12;:18;6584:4;6571:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6546:57;;6613:18;6634:17;:26;6652:7;6634:26;;;;;;;;;;;;6613:47;;6778:14;6764:10;:28;;6760:323;;;6808:19;6830:12;:18;6843:4;6830:18;;;;;;;;;;;;;;;6849:14;6830:34;;;;;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;6879:18;;;;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;;;:44;;;;7028:10;6995:17;:30;7013:11;6995:30;;;;;;;;;;;:43;;;;6760:323;;7169:12;:18;7182:4;7169:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6284:1128;;;;:::o;14367:1051:7:-;14488:4;14513:15;:2;:13;;;:15::i;:::-;14512:16;14508:58;;;14551:4;14544:11;;;;14508:58;14635:12;14649:23;14676:2;:7;;14736:2;14720:36;;;:45;;;;14779:12;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14684:175:7;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;14684:175:7;14676:184;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:7;;;;14875:7;14874:8;14870:542;;;14922:1;14902:10;:17;:21;14898:376;;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;;;;;;;;;;15304:48;;754:10;15384:16;;15374:26;;;:6;:26;;;;15366:35;;;;;14367:1051;;;;;;;:::o;1183:178:3:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;15580:171:7:-;15679:1;15643:38;;:15;:24;15659:7;15643:24;;;;;;;;;;;;;;;;;;;;;:38;;;;15639:106;;;15732:1;15697:15;:24;15713:7;15697:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15639:106;15580:171;:::o;1367:108:3:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;686:610:15:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;132:1712:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:112;;194:43;229:6;216:20;194:43;;;185:52;;179:63;;;;;249:116;;315:45;352:6;339:20;315:45;;;306:54;;300:65;;;;;372:120;;449:38;479:6;473:13;449:38;;;440:47;;434:58;;;;;500:440;;601:3;594:4;586:6;582:17;578:27;571:35;568:2;;;619:1;616;609:12;568:2;656:6;643:20;678:64;693:48;734:6;693:48;;;678:64;;;669:73;;762:6;755:5;748:21;798:4;790:6;786:17;831:4;824:5;820:16;866:3;857:6;852:3;848:16;845:25;842:2;;;883:1;880;873:12;842:2;893:41;927:6;922:3;917;893:41;;;561:379;;;;;;;;949:442;;1051:3;1044:4;1036:6;1032:17;1028:27;1021:35;1018:2;;;1069:1;1066;1059:12;1018:2;1106:6;1093:20;1128:65;1143:49;1185:6;1143:49;;;1128:65;;;1119:74;;1213:6;1206:5;1199:21;1249:4;1241:6;1237:17;1282:4;1275:5;1271:16;1317:3;1308:6;1303:3;1299:16;1296:25;1293:2;;;1334:1;1331;1324:12;1293:2;1344:41;1378:6;1373:3;1368;1344:41;;;1011:380;;;;;;;;1399:118;;1466:46;1504:6;1491:20;1466:46;;;1457:55;;1451:66;;;;;1524:241;;1628:2;1616:9;1607:7;1603:23;1599:32;1596:2;;;1644:1;1641;1634:12;1596:2;1679:1;1696:53;1741:7;1732:6;1721:9;1717:22;1696:53;;;1686:63;;1658:97;1590:175;;;;;1772:366;;;1893:2;1881:9;1872:7;1868:23;1864:32;1861:2;;;1909:1;1906;1899:12;1861:2;1944:1;1961:53;2006:7;1997:6;1986:9;1982:22;1961:53;;;1951:63;;1923:97;2051:2;2069:53;2114:7;2105:6;2094:9;2090:22;2069:53;;;2059:63;;2030:98;1855:283;;;;;;2145:491;;;;2283:2;2271:9;2262:7;2258:23;2254:32;2251:2;;;2299:1;2296;2289:12;2251:2;2334:1;2351:53;2396:7;2387:6;2376:9;2372:22;2351:53;;;2341:63;;2313:97;2441:2;2459:53;2504:7;2495:6;2484:9;2480:22;2459:53;;;2449:63;;2420:98;2549:2;2567:53;2612:7;2603:6;2592:9;2588:22;2567:53;;;2557:63;;2528:98;2245:391;;;;;;2643:721;;;;;2807:3;2795:9;2786:7;2782:23;2778:33;2775:2;;;2824:1;2821;2814:12;2775:2;2859:1;2876:53;2921:7;2912:6;2901:9;2897:22;2876:53;;;2866:63;;2838:97;2966:2;2984:53;3029:7;3020:6;3009:9;3005:22;2984:53;;;2974:63;;2945:98;3074:2;3092:53;3137:7;3128:6;3117:9;3113:22;3092:53;;;3082:63;;3053:98;3210:2;3199:9;3195:18;3182:32;3234:18;3226:6;3223:30;3220:2;;;3266:1;3263;3256:12;3220:2;3286:62;3340:7;3331:6;3320:9;3316:22;3286:62;;;3276:72;;3161:193;2769:595;;;;;;;;3371:360;;;3489:2;3477:9;3468:7;3464:23;3460:32;3457:2;;;3505:1;3502;3495:12;3457:2;3540:1;3557:53;3602:7;3593:6;3582:9;3578:22;3557:53;;;3547:63;;3519:97;3647:2;3665:50;3707:7;3698:6;3687:9;3683:22;3665:50;;;3655:60;;3626:95;3451:280;;;;;;3738:366;;;3859:2;3847:9;3838:7;3834:23;3830:32;3827:2;;;3875:1;3872;3865:12;3827:2;3910:1;3927:53;3972:7;3963:6;3952:9;3948:22;3927:53;;;3917:63;;3889:97;4017:2;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;;;4025:63;;3996:98;3821:283;;;;;;4111:239;;4214:2;4202:9;4193:7;4189:23;4185:32;4182:2;;;4230:1;4227;4220:12;4182:2;4265:1;4282:52;4326:7;4317:6;4306:9;4302:22;4282:52;;;4272:62;;4244:96;4176:174;;;;;4357:261;;4471:2;4459:9;4450:7;4446:23;4442:32;4439:2;;;4487:1;4484;4477:12;4439:2;4522:1;4539:63;4594:7;4585:6;4574:9;4570:22;4539:63;;;4529:73;;4501:107;4433:185;;;;;4625:472;;;4756:2;4744:9;4735:7;4731:23;4727:32;4724:2;;;4772:1;4769;4762:12;4724:2;4835:1;4824:9;4820:17;4807:31;4858:18;4850:6;4847:30;4844:2;;;4890:1;4887;4880:12;4844:2;4910:63;4965:7;4956:6;4945:9;4941:22;4910:63;;;4900:73;;4786:193;5010:2;5028:53;5073:7;5064:6;5053:9;5049:22;5028:53;;;5018:63;;4989:98;4718:379;;;;;;5104:241;;5208:2;5196:9;5187:7;5183:23;5179:32;5176:2;;;5224:1;5221;5214:12;5176:2;5259:1;5276:53;5321:7;5312:6;5301:9;5297:22;5276:53;;;5266:63;;5238:97;5170:175;;;;;5353:227;;5489:85;5570:3;5563:5;5489:85;;;5475:99;;5468:112;;;;;5588:144;5687:39;5720:5;5687:39;;;5682:3;5675:52;5669:63;;;5739:120;5822:31;5847:5;5822:31;;;5817:3;5810:44;5804:55;;;5939:923;;6120:72;6186:5;6120:72;;;6205:104;6302:6;6297:3;6205:104;;;6198:111;;6332:3;6374:4;6366:6;6362:17;6357:3;6353:27;6400:74;6468:5;6400:74;;;6495:1;6480:343;6505:6;6502:1;6499:13;6480:343;;;6567:9;6561:4;6557:20;6552:3;6545:33;6593:100;6688:4;6679:6;6673:13;6593:100;;;6585:108;;6710:78;6781:6;6710:78;;;6700:88;;6811:4;6806:3;6802:14;6795:21;;6527:1;6524;6520:9;6515:14;;6480:343;;;6484:14;6836:4;6829:11;;6853:3;6846:10;;6099:763;;;;;;;;;6870:111;6947:28;6969:5;6947:28;;;6942:3;6935:41;6929:52;;;6988:343;;7098:38;7130:5;7098:38;;;7148:70;7211:6;7206:3;7148:70;;;7141:77;;7223:52;7268:6;7263:3;7256:4;7249:5;7245:16;7223:52;;;7296:29;7318:6;7296:29;;;7291:3;7287:39;7280:46;;7078:253;;;;;;7338:356;;7466:38;7498:5;7466:38;;;7516:88;7597:6;7592:3;7516:88;;;7509:95;;7609:52;7654:6;7649:3;7642:4;7635:5;7631:16;7609:52;;;7682:6;7677:3;7673:16;7666:23;;7446:248;;;;;;7701:347;;7813:39;7846:5;7813:39;;;7864:71;7928:6;7923:3;7864:71;;;7857:78;;7940:52;7985:6;7980:3;7973:4;7966:5;7962:16;7940:52;;;8013:29;8035:6;8013:29;;;8008:3;8004:39;7997:46;;7793:255;;;;;;8055:360;;8185:39;8218:5;8185:39;;;8236:89;8318:6;8313:3;8236:89;;;8229:96;;8330:52;8375:6;8370:3;8363:4;8356:5;8352:16;8330:52;;;8403:6;8398:3;8394:16;8387:23;;8165:250;;;;;;8422:319;;8520:35;8549:5;8520:35;;;8567:61;8621:6;8616:3;8567:61;;;8560:68;;8633:52;8678:6;8673:3;8666:4;8659:5;8655:16;8633:52;;;8706:29;8728:6;8706:29;;;8701:3;8697:39;8690:46;;8500:241;;;;;;8748:339;;8856:35;8885:5;8856:35;;;8903:71;8967:6;8962:3;8903:71;;;8896:78;;8979:52;9024:6;9019:3;9012:4;9005:5;9001:16;8979:52;;;9052:29;9074:6;9052:29;;;9047:3;9043:39;9036:46;;8836:251;;;;;;9119:884;;9256:5;9250:12;9290:1;9279:9;9275:17;9303:1;9298:268;;;;9577:1;9572:425;;;;9268:729;;9298:268;9376:4;9372:1;9361:9;9357:17;9353:28;9395:89;9477:6;9472:3;9395:89;;;9388:96;;9522:4;9518:9;9507;9503:25;9498:3;9491:38;9552:6;9547:3;9543:16;9536:23;;9305:261;9298:268;;9572:425;9641:1;9630:9;9626:17;9657:89;9739:6;9734:3;9657:89;;;9650:96;;9768:38;9800:5;9768:38;;;9822:1;9830:130;9844:6;9841:1;9838:13;9830:130;;;9909:7;9903:14;9899:1;9894:3;9890:11;9883:35;9950:1;9941:7;9937:15;9926:26;;9866:4;9863:1;9859:12;9854:17;;9830:130;;;9983:6;9978:3;9974:16;9967:23;;9579:418;;;9268:729;;9226:777;;;;;;10012:465;;10172:67;10236:2;10231:3;10172:67;;;10165:74;;10272:66;10268:1;10263:3;10259:11;10252:87;10373:66;10368:2;10363:3;10359:12;10352:88;10468:2;10463:3;10459:12;10452:19;;10158:319;;;;10486:465;;10646:67;10710:2;10705:3;10646:67;;;10639:74;;10746:66;10742:1;10737:3;10733:11;10726:87;10847:66;10842:2;10837:3;10833:12;10826:88;10942:2;10937:3;10933:12;10926:19;;10632:319;;;;10960:364;;11120:67;11184:2;11179:3;11120:67;;;11113:74;;11220:66;11216:1;11211:3;11207:11;11200:87;11315:2;11310:3;11306:12;11299:19;;11106:218;;;;11333:465;;11493:67;11557:2;11552:3;11493:67;;;11486:74;;11593:66;11589:1;11584:3;11580:11;11573:87;11694:66;11689:2;11684:3;11680:12;11673:88;11789:2;11784:3;11780:12;11773:19;;11479:319;;;;11807:364;;11967:67;12031:2;12026:3;11967:67;;;11960:74;;12067:66;12063:1;12058:3;12054:11;12047:87;12162:2;12157:3;12153:12;12146:19;;11953:218;;;;12180:465;;12340:67;12404:2;12399:3;12340:67;;;12333:74;;12440:66;12436:1;12431:3;12427:11;12420:87;12541:66;12536:2;12531:3;12527:12;12520:88;12636:2;12631:3;12627:12;12620:19;;12326:319;;;;12654:465;;12814:67;12878:2;12873:3;12814:67;;;12807:74;;12914:66;12910:1;12905:3;12901:11;12894:87;13015:66;13010:2;13005:3;13001:12;12994:88;13110:2;13105:3;13101:12;13094:19;;12800:319;;;;13128:465;;13288:67;13352:2;13347:3;13288:67;;;13281:74;;13388:66;13384:1;13379:3;13375:11;13368:87;13489:66;13484:2;13479:3;13475:12;13468:88;13584:2;13579:3;13575:12;13568:19;;13274:319;;;;13602:465;;13762:67;13826:2;13821:3;13762:67;;;13755:74;;13862:66;13858:1;13853:3;13849:11;13842:87;13963:66;13958:2;13953:3;13949:12;13942:88;14058:2;14053:3;14049:12;14042:19;;13748:319;;;;14076:364;;14236:67;14300:2;14295:3;14236:67;;;14229:74;;14336:66;14332:1;14327:3;14323:11;14316:87;14431:2;14426:3;14422:12;14415:19;;14222:218;;;;14449:465;;14609:67;14673:2;14668:3;14609:67;;;14602:74;;14709:66;14705:1;14700:3;14696:11;14689:87;14810:66;14805:2;14800:3;14796:12;14789:88;14905:2;14900:3;14896:12;14889:19;;14595:319;;;;14923:465;;15083:67;15147:2;15142:3;15083:67;;;15076:74;;15183:66;15179:1;15174:3;15170:11;15163:87;15284:66;15279:2;15274:3;15270:12;15263:88;15379:2;15374:3;15370:12;15363:19;;15069:319;;;;15397:465;;15557:67;15621:2;15616:3;15557:67;;;15550:74;;15657:66;15653:1;15648:3;15644:11;15637:87;15758:66;15753:2;15748:3;15744:12;15737:88;15853:2;15848:3;15844:12;15837:19;;15543:319;;;;15871:465;;16031:67;16095:2;16090:3;16031:67;;;16024:74;;16131:66;16127:1;16122:3;16118:11;16111:87;16232:66;16227:2;16222:3;16218:12;16211:88;16327:2;16322:3;16318:12;16311:19;;16017:319;;;;16345:465;;16505:67;16569:2;16564:3;16505:67;;;16498:74;;16605:66;16601:1;16596:3;16592:11;16585:87;16706:66;16701:2;16696:3;16692:12;16685:88;16801:2;16796:3;16792:12;16785:19;;16491:319;;;;16819:465;;16979:67;17043:2;17038:3;16979:67;;;16972:74;;17079:66;17075:1;17070:3;17066:11;17059:87;17180:66;17175:2;17170:3;17166:12;17159:88;17275:2;17270:3;17266:12;17259:19;;16965:319;;;;17359:851;;17490:4;17485:3;17481:14;17570:3;17563:5;17559:15;17553:22;17581:61;17637:3;17632;17628:13;17615:11;17581:61;;;17510:138;17725:4;17718:5;17714:16;17708:23;17737:60;17791:4;17786:3;17782:14;17769:11;17737:60;;;17658:145;17879:4;17872:5;17868:16;17862:23;17931:3;17925:4;17921:14;17914:4;17909:3;17905:14;17898:38;17951:68;18014:4;18001:11;17951:68;;;17943:76;;17813:218;18104:4;18097:5;18093:16;18087:23;18116:62;18172:4;18167:3;18163:14;18150:11;18116:62;;;18041:143;18201:4;18194:11;;17463:747;;;;;;18217:110;18290:31;18315:5;18290:31;;;18285:3;18278:44;18272:55;;;18334:120;18417:31;18442:5;18417:31;;;18412:3;18405:44;18399:55;;;18461:107;18532:30;18556:5;18532:30;;;18527:3;18520:43;18514:54;;;18575:117;18656:30;18680:5;18656:30;;;18651:3;18644:43;18638:54;;;18699:262;;18843:93;18932:3;18923:6;18843:93;;;18836:100;;18953:3;18946:10;;18824:137;;;;;18968:421;;19159:92;19247:3;19238:6;19159:92;;;19152:99;;19269:95;19360:3;19351:6;19269:95;;;19262:102;;19381:3;19374:10;;19140:249;;;;;;19396:213;;19514:2;19503:9;19499:18;19491:26;;19528:71;19596:1;19585:9;19581:17;19572:6;19528:71;;;19485:124;;;;;19616:663;;19852:3;19841:9;19837:19;19829:27;;19867:87;19951:1;19940:9;19936:17;19927:6;19867:87;;;19965:72;20033:2;20022:9;20018:18;20009:6;19965:72;;;20048;20116:2;20105:9;20101:18;20092:6;20048:72;;;20168:9;20162:4;20158:20;20153:2;20142:9;20138:18;20131:48;20193:76;20264:4;20255:6;20193:76;;;20185:84;;19823:456;;;;;;;;20286:435;;20460:2;20449:9;20445:18;20437:26;;20474:71;20542:1;20531:9;20527:17;20518:6;20474:71;;;20556:72;20624:2;20613:9;20609:18;20600:6;20556:72;;;20639;20707:2;20696:9;20692:18;20683:6;20639:72;;;20431:290;;;;;;;20728:523;;20922:2;20911:9;20907:18;20899:26;;20936:71;21004:1;20993:9;20989:17;20980:6;20936:71;;;21018:72;21086:2;21075:9;21071:18;21062:6;21018:72;;;21138:9;21132:4;21128:20;21123:2;21112:9;21108:18;21101:48;21163:78;21236:4;21227:6;21163:78;;;21155:86;;20893:358;;;;;;;21258:433;;21462:2;21451:9;21447:18;21439:26;;21512:9;21506:4;21502:20;21498:1;21487:9;21483:17;21476:47;21537:144;21676:4;21667:6;21537:144;;;21529:152;;21433:258;;;;;21698:201;;21810:2;21799:9;21795:18;21787:26;;21824:65;21886:1;21875:9;21871:17;21862:6;21824:65;;;21781:118;;;;;21906:301;;22044:2;22033:9;22029:18;22021:26;;22094:9;22088:4;22084:20;22080:1;22069:9;22065:17;22058:47;22119:78;22192:4;22183:6;22119:78;;;22111:86;;22015:192;;;;;22214:407;;22405:2;22394:9;22390:18;22382:26;;22455:9;22449:4;22445:20;22441:1;22430:9;22426:17;22419:47;22480:131;22606:4;22480:131;;;22472:139;;22376:245;;;;22628:407;;22819:2;22808:9;22804:18;22796:26;;22869:9;22863:4;22859:20;22855:1;22844:9;22840:17;22833:47;22894:131;23020:4;22894:131;;;22886:139;;22790:245;;;;23042:407;;23233:2;23222:9;23218:18;23210:26;;23283:9;23277:4;23273:20;23269:1;23258:9;23254:17;23247:47;23308:131;23434:4;23308:131;;;23300:139;;23204:245;;;;23456:407;;23647:2;23636:9;23632:18;23624:26;;23697:9;23691:4;23687:20;23683:1;23672:9;23668:17;23661:47;23722:131;23848:4;23722:131;;;23714:139;;23618:245;;;;23870:407;;24061:2;24050:9;24046:18;24038:26;;24111:9;24105:4;24101:20;24097:1;24086:9;24082:17;24075:47;24136:131;24262:4;24136:131;;;24128:139;;24032:245;;;;24284:407;;24475:2;24464:9;24460:18;24452:26;;24525:9;24519:4;24515:20;24511:1;24500:9;24496:17;24489:47;24550:131;24676:4;24550:131;;;24542:139;;24446:245;;;;24698:407;;24889:2;24878:9;24874:18;24866:26;;24939:9;24933:4;24929:20;24925:1;24914:9;24910:17;24903:47;24964:131;25090:4;24964:131;;;24956:139;;24860:245;;;;25112:407;;25303:2;25292:9;25288:18;25280:26;;25353:9;25347:4;25343:20;25339:1;25328:9;25324:17;25317:47;25378:131;25504:4;25378:131;;;25370:139;;25274:245;;;;25526:407;;25717:2;25706:9;25702:18;25694:26;;25767:9;25761:4;25757:20;25753:1;25742:9;25738:17;25731:47;25792:131;25918:4;25792:131;;;25784:139;;25688:245;;;;25940:407;;26131:2;26120:9;26116:18;26108:26;;26181:9;26175:4;26171:20;26167:1;26156:9;26152:17;26145:47;26206:131;26332:4;26206:131;;;26198:139;;26102:245;;;;26354:407;;26545:2;26534:9;26530:18;26522:26;;26595:9;26589:4;26585:20;26581:1;26570:9;26566:17;26559:47;26620:131;26746:4;26620:131;;;26612:139;;26516:245;;;;26768:407;;26959:2;26948:9;26944:18;26936:26;;27009:9;27003:4;26999:20;26995:1;26984:9;26980:17;26973:47;27034:131;27160:4;27034:131;;;27026:139;;26930:245;;;;27182:407;;27373:2;27362:9;27358:18;27350:26;;27423:9;27417:4;27413:20;27409:1;27398:9;27394:17;27387:47;27448:131;27574:4;27448:131;;;27440:139;;27344:245;;;;27596:407;;27787:2;27776:9;27772:18;27764:26;;27837:9;27831:4;27827:20;27823:1;27812:9;27808:17;27801:47;27862:131;27988:4;27862:131;;;27854:139;;27758:245;;;;28010:407;;28201:2;28190:9;28186:18;28178:26;;28251:9;28245:4;28241:20;28237:1;28226:9;28222:17;28215:47;28276:131;28402:4;28276:131;;;28268:139;;28172:245;;;;28424:407;;28615:2;28604:9;28600:18;28592:26;;28665:9;28659:4;28655:20;28651:1;28640:9;28636:17;28629:47;28690:131;28816:4;28690:131;;;28682:139;;28586:245;;;;28838:213;;28956:2;28945:9;28941:18;28933:26;;28970:71;29038:1;29027:9;29023:17;29014:6;28970:71;;;28927:124;;;;;29058:623;;29274:3;29263:9;29259:19;29251:27;;29289:71;29357:1;29346:9;29342:17;29333:6;29289:71;;;29371:70;29437:2;29426:9;29422:18;29413:6;29371:70;;;29489:9;29483:4;29479:20;29474:2;29463:9;29459:18;29452:48;29514:74;29583:4;29574:6;29514:74;;;29506:82;;29599:72;29667:2;29656:9;29652:18;29643:6;29599:72;;;29245:436;;;;;;;;29688:256;;29750:2;29744:9;29734:19;;29788:4;29780:6;29776:17;29887:6;29875:10;29872:22;29851:18;29839:10;29836:34;29833:62;29830:2;;;29908:1;29905;29898:12;29830:2;29928:10;29924:2;29917:22;29728:216;;;;;29951:258;;30094:18;30086:6;30083:30;30080:2;;;30126:1;30123;30116:12;30080:2;30170:4;30166:9;30159:4;30151:6;30147:17;30143:33;30135:41;;30199:4;30193;30189:15;30181:23;;30017:192;;;;30216:259;;30360:18;30352:6;30349:30;30346:2;;;30392:1;30389;30382:12;30346:2;30436:4;30432:9;30425:4;30417:6;30413:17;30409:33;30401:41;;30465:4;30459;30455:15;30447:23;;30283:192;;;;30484:139;;30611:4;30603:6;30599:17;30588:28;;30580:43;;;;30634:126;;30711:4;30708:1;30701:15;30748:4;30745:1;30735:18;30723:30;;30693:67;;;;30769:125;;30883:5;30877:12;30867:22;;30861:33;;;;30901:91;;30981:5;30975:12;30965:22;;30959:33;;;;30999:88;;31076:5;31070:12;31060:22;;31054:33;;;;31094:92;;31175:5;31169:12;31159:22;;31153:33;;;;31194:140;;31323:4;31315:6;31311:17;31300:28;;31293:41;;;;31343:196;;31491:6;31486:3;31479:19;31528:4;31523:3;31519:14;31504:29;;31472:67;;;;;31548:162;;31662:6;31657:3;31650:19;31699:4;31694:3;31690:14;31675:29;;31643:67;;;;;31719:144;;31854:3;31839:18;;31832:31;;;;;31872:153;;31977:6;31972:3;31965:19;32014:4;32009:3;32005:14;31990:29;;31958:67;;;;;32034:163;;32149:6;32144:3;32137:19;32186:4;32181:3;32177:14;32162:29;;32130:67;;;;;32206:145;;32342:3;32327:18;;32320:31;;;;;32359:105;;32428:31;32453:5;32428:31;;;32417:42;;32411:53;;;;32471:113;;32548:31;32573:5;32548:31;;;32537:42;;32531:53;;;;32591:92;;32671:5;32664:13;32657:21;32646:32;;32640:43;;;;32690:128;;32770:42;32763:5;32759:54;32748:65;;32742:76;;;;32825:79;;32894:5;32883:16;;32877:27;;;;32911:103;;32990:18;32983:5;32979:30;32968:41;;32962:52;;;;33021:105;;33090:31;33115:5;33090:31;;;33079:42;;33073:53;;;;33133:92;;33213:5;33206:13;33199:21;33188:32;;33182:43;;;;33232:151;;33311:66;33304:5;33300:78;33289:89;;33283:100;;;;33390:128;;33470:42;33463:5;33459:54;33448:65;;33442:76;;;;33525:79;;33594:5;33583:16;;33577:27;;;;33612:145;33693:6;33688:3;33683;33670:30;33749:1;33740:6;33735:3;33731:16;33724:27;33663:94;;;;33766:268;33831:1;33838:101;33852:6;33849:1;33846:13;33838:101;;;33928:1;33923:3;33919:11;33913:18;33909:1;33904:3;33900:11;33893:39;33874:2;33871:1;33867:10;33862:15;;33838:101;;;33954:6;33951:1;33948:13;33945:2;;;34019:1;34010:6;34005:3;34001:16;33994:27;33945:2;33815:219;;;;;34042:97;;34130:2;34126:7;34121:2;34114:5;34110:14;34106:28;34096:38;;34090:49;;;",
  "source": "pragma solidity >=0.4.21 <=0.6.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\";\n\ncontract DBZCollectible is ERC721Full {\n    DBCard[] public cards;\n    uint256 nonce = 0;\n    mapping(uint256 => address) public cardIndexToOwner;\n    mapping(address => uint256) ownershipTokenCount;\n\n    event Created(address owner, uint256 cardID, string cardType);\n    event Transfer(address from, address to, uint256 tokenId);\n\n    struct DBCard {\n        uint256 id;\n        uint64 birthTime;\n        string cardType;\n        uint price;\n    }\n\n    function getCards() external returns(DBCard[] memory) {\n        return cards;\n    }\n\n    constructor() public ERC721Full(\"Dragon Ball Card\", \"DBZCARD\") {\n        mint('goku_ss_namek', 1);\n        mint('broly_dbs_ss', 1);\n        mint('majin_vegeta', 1);\n    }\n\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\n        ownershipTokenCount[_to]++;\n        cardIndexToOwner[_tokenId] = _to;\n\n        if (_from != address(0)) {\n            ownershipTokenCount[_from]--;\n        }\n\n        emit Transfer(_from, _to, _tokenId);\n    }\n\n    function _createDBCard(address _owner,string memory _cardType, uint _price) internal returns (uint)\n    {\n        require(bytes(_cardType).length > 0);\n        require(_price > 0);\n\n        nonce++;\n\n        DBCard memory _DBCard = DBCard({\n            id: nonce,\n            birthTime: uint64(now),\n            cardType: _cardType,\n            price: _price\n        });\n\n        cards.push(_DBCard);\n\n        emit Created(_owner, nonce, _cardType);\n\n        _transfer(address(0), _owner, nonce);\n\n        return nonce;\n    }\n\n    function mint(string memory cardType, uint _price) public {\n        uint _id = _createDBCard(msg.sender, cardType, _price);\n        _mint(msg.sender, _id);\n    }\n}\n",
  "sourcePath": "/home/jose/projects/blockchain/dbz-cards/src/contracts/DBZCollectible.sol",
  "ast": {
    "absolutePath": "/home/jose/projects/blockchain/dbz-cards/src/contracts/DBZCollectible.sol",
    "exportedSymbols": {
      "DBZCollectible": [
        202
      ]
    },
    "id": 203,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<=",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 1620,
        "src": "69:61:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1619,
              "src": "159:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1619",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "159:10:0"
          }
        ],
        "contractDependencies": [
          286,
          387,
          397,
          1255,
          1595,
          1619,
          1792,
          1895,
          1922,
          1945
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202,
          1619,
          1792,
          1945,
          1595,
          1922,
          1255,
          1895,
          387,
          397,
          286
        ],
        "name": "DBZCollectible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "176:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
              "typeString": "struct DBZCollectible.DBCard[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6,
                "name": "DBCard",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "176:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                  "typeString": "struct DBZCollectible.DBCard"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "176:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage_ptr",
                "typeString": "struct DBZCollectible.DBCard[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "nonce",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "203:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "203:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "219:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "name": "cardIndexToOwner",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "226:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "234:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "226:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "245:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "ownershipTokenCount",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "283:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "283:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "Created",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "351:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "cardID",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "366:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "382:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:48:0"
            },
            "src": "337:62:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 35,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "419:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "433:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "445:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:43:0"
            },
            "src": "404:58:0"
          },
          {
            "canonicalName": "DBZCollectible.DBCard",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 37,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "492:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "492:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "name": "birthTime",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "512:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "name": "cardType",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "538:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 40,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "538:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "563:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "DBCard",
            "nodeType": "StructDefinition",
            "scope": 202,
            "src": "468:112:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "640:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "name": "cards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "657:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
                      "typeString": "struct DBZCollectible.DBCard storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 49,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "650:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "623:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DBCard_$44_memory_$dyn_memory_ptr",
                    "typeString": "struct DBZCollectible.DBCard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 46,
                      "name": "DBCard",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 44,
                      "src": "623:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                        "typeString": "struct DBZCollectible.DBCard"
                      }
                    },
                    "id": 47,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "623:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage_ptr",
                      "typeString": "struct DBZCollectible.DBCard[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:17:0"
            },
            "scope": 202,
            "src": "586:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "738:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "676f6b755f73735f6e616d656b",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d658c77a16b14af84a0b88d151a26c4a9730da219a5f1e02883be8198d33bff6",
                          "typeString": "literal_string \"goku_ss_namek\""
                        },
                        "value": "goku_ss_namek"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "770:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d658c77a16b14af84a0b88d151a26c4a9730da219a5f1e02883be8198d33bff6",
                          "typeString": "literal_string \"goku_ss_namek\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 60,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "748:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "748:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "62726f6c795f6462735f7373",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "787:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97a88d126174958c6baad91f633ccebbf8764495984c1bb374007b42784cfda0",
                          "typeString": "literal_string \"broly_dbs_ss\""
                        },
                        "value": "broly_dbs_ss"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97a88d126174958c6baad91f633ccebbf8764495984c1bb374007b42784cfda0",
                          "typeString": "literal_string \"broly_dbs_ss\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 65,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "782:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "782:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6d616a696e5f766567657461",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "820:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488175d4dc333438d7e00a752094738e9136f3538da969de919d23d95ccedd9e",
                          "typeString": "literal_string \"majin_vegeta\""
                        },
                        "value": "majin_vegeta"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_488175d4dc333438d7e00a752094738e9136f3538da969de919d23d95ccedd9e",
                          "typeString": "literal_string \"majin_vegeta\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 70,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "815:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "815:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "447261676f6e2042616c6c2043617264",
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:18:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_618cd22e3392687124f22989391e3b4f8d0a93b665bd3472bda1f632945c9c5b",
                      "typeString": "literal_string \"Dragon Ball Card\""
                    },
                    "value": "Dragon Ball Card"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "44425a43415244",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "727:9:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bca9909ca97598132848ed569a228818a5aee6b20ea1647724b97aac2149c714",
                      "typeString": "literal_string \"DBZCARD\""
                    },
                    "value": "DBZCARD"
                  }
                ],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1619,
                  "src": "696:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1619_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "696:41:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:0"
            },
            "scope": 202,
            "src": "675:170:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "925:219:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "935:26:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "ownershipTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "935:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "955:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "935:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "935:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "cardIndexToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "971:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "988:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "971:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1000:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "971:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "971:32:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1018:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1035:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1027:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1027:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1018:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "1014:78:0",
                  "trueBody": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "1039:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "1053:28:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "ownershipTokenCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "1053:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 102,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1073:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1053:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1053:28:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1116:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1123:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1128:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        35
                      ],
                      "referencedDeclaration": 35,
                      "src": "1107:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "1102:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "870:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "885:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "898:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "869:46:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:0"
            },
            "scope": 202,
            "src": "851:293:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1254:421:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 128,
                                "name": "_cardType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "1278:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1272:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1272:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1272:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1298:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1272:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2054,
                        2055
                      ],
                      "referencedDeclaration": 2054,
                      "src": "1264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1318:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1327:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1318:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2054,
                        2055
                      ],
                      "referencedDeclaration": 2054,
                      "src": "1310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1340:7:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1340:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:7:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "name": "_DBCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1358:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                        "typeString": "struct DBZCollectible.DBCard"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 144,
                        "name": "DBCard",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "1358:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                          "typeString": "struct DBZCollectible.DBCard"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1407:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "1444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1437:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": "uint64"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "_cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1472:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1502:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "DBCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1382:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DBCard_$44_storage_ptr_$",
                        "typeString": "type(struct DBZCollectible.DBCard storage pointer)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "id",
                      "birthTime",
                      "cardType",
                      "price"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1382:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DBCard_$44_memory",
                      "typeString": "struct DBZCollectible.DBCard memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1358:161:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "_DBCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1541:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                          "typeString": "struct DBZCollectible.DBCard memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                          "typeString": "struct DBZCollectible.DBCard memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1530:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
                          "typeString": "struct DBZCollectible.DBCard storage ref[] storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1530:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_DBCard_$44_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DBZCollectible.DBCard storage ref) returns (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1573:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1581:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "_cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1588:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 161,
                      "name": "Created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1565:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "EmitStatement",
                  "src": "1560:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1627:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1619:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1631:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1639:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 167,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1609:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 175,
                    "name": "nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1663:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "1656:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDBCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1173:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1188:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1213:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:53:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1244:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1243:6:0"
            },
            "scope": 202,
            "src": "1150:525:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1739:103:0",
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1749:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 193,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "1774:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1774:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1786:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1796:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "_createDBCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "1760:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "1819:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1819:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "1831:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 194,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1402
                      ],
                      "referencedDeclaration": 1402,
                      "src": "1813:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "name": "cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1695:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1719:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1694:37:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1739:0:0"
            },
            "scope": 202,
            "src": "1681:161:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 203,
        "src": "132:1712:0"
      }
    ],
    "src": "0:1845:0"
  },
  "legacyAST": {
    "absolutePath": "/home/jose/projects/blockchain/dbz-cards/src/contracts/DBZCollectible.sol",
    "exportedSymbols": {
      "DBZCollectible": [
        202
      ]
    },
    "id": 203,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<=",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 1620,
        "src": "69:61:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1619,
              "src": "159:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1619",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "159:10:0"
          }
        ],
        "contractDependencies": [
          286,
          387,
          397,
          1255,
          1595,
          1619,
          1792,
          1895,
          1922,
          1945
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202,
          1619,
          1792,
          1945,
          1595,
          1922,
          1255,
          1895,
          387,
          397,
          286
        ],
        "name": "DBZCollectible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "176:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
              "typeString": "struct DBZCollectible.DBCard[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6,
                "name": "DBCard",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 44,
                "src": "176:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                  "typeString": "struct DBZCollectible.DBCard"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "176:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage_ptr",
                "typeString": "struct DBZCollectible.DBCard[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "nonce",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "203:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "203:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "219:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "name": "cardIndexToOwner",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "226:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "234:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "226:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "245:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "ownershipTokenCount",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "283:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "283:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "Created",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "351:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "cardID",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "366:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "382:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:48:0"
            },
            "src": "337:62:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 35,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "419:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "433:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "445:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:43:0"
            },
            "src": "404:58:0"
          },
          {
            "canonicalName": "DBZCollectible.DBCard",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 37,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "492:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "492:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "name": "birthTime",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "512:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "name": "cardType",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "538:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 40,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "538:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "563:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "DBCard",
            "nodeType": "StructDefinition",
            "scope": 202,
            "src": "468:112:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "640:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "name": "cards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "657:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
                      "typeString": "struct DBZCollectible.DBCard storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 49,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "650:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "623:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DBCard_$44_memory_$dyn_memory_ptr",
                    "typeString": "struct DBZCollectible.DBCard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 46,
                      "name": "DBCard",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 44,
                      "src": "623:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                        "typeString": "struct DBZCollectible.DBCard"
                      }
                    },
                    "id": 47,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "623:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage_ptr",
                      "typeString": "struct DBZCollectible.DBCard[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:17:0"
            },
            "scope": 202,
            "src": "586:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "738:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "676f6b755f73735f6e616d656b",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d658c77a16b14af84a0b88d151a26c4a9730da219a5f1e02883be8198d33bff6",
                          "typeString": "literal_string \"goku_ss_namek\""
                        },
                        "value": "goku_ss_namek"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "770:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d658c77a16b14af84a0b88d151a26c4a9730da219a5f1e02883be8198d33bff6",
                          "typeString": "literal_string \"goku_ss_namek\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 60,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "748:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "748:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "62726f6c795f6462735f7373",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "787:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97a88d126174958c6baad91f633ccebbf8764495984c1bb374007b42784cfda0",
                          "typeString": "literal_string \"broly_dbs_ss\""
                        },
                        "value": "broly_dbs_ss"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "803:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_97a88d126174958c6baad91f633ccebbf8764495984c1bb374007b42784cfda0",
                          "typeString": "literal_string \"broly_dbs_ss\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 65,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "782:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "782:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6d616a696e5f766567657461",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "820:14:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488175d4dc333438d7e00a752094738e9136f3538da969de919d23d95ccedd9e",
                          "typeString": "literal_string \"majin_vegeta\""
                        },
                        "value": "majin_vegeta"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_488175d4dc333438d7e00a752094738e9136f3538da969de919d23d95ccedd9e",
                          "typeString": "literal_string \"majin_vegeta\""
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 70,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "815:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "815:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "447261676f6e2042616c6c2043617264",
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:18:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_618cd22e3392687124f22989391e3b4f8d0a93b665bd3472bda1f632945c9c5b",
                      "typeString": "literal_string \"Dragon Ball Card\""
                    },
                    "value": "Dragon Ball Card"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "44425a43415244",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "727:9:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bca9909ca97598132848ed569a228818a5aee6b20ea1647724b97aac2149c714",
                      "typeString": "literal_string \"DBZCARD\""
                    },
                    "value": "DBZCARD"
                  }
                ],
                "id": 58,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 55,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1619,
                  "src": "696:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1619_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "696:41:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:0"
            },
            "scope": 202,
            "src": "675:170:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "925:219:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "935:26:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "ownershipTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "935:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "955:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "935:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "935:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "cardIndexToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "971:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "988:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "971:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1000:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "971:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "971:32:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1018:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1035:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1027:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1027:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1018:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 107,
                  "nodeType": "IfStatement",
                  "src": "1014:78:0",
                  "trueBody": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "1039:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "1053:28:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "ownershipTokenCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "1053:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 102,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1073:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1053:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "1053:28:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1116:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1123:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1128:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 108,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        35
                      ],
                      "referencedDeclaration": 35,
                      "src": "1107:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "1102:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "870:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "885:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "898:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "869:46:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:0"
            },
            "scope": 202,
            "src": "851:293:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "1254:421:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 128,
                                "name": "_cardType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 119,
                                "src": "1278:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1272:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1272:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1272:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1298:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1272:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2054,
                        2055
                      ],
                      "referencedDeclaration": 2054,
                      "src": "1264:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "1318:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1327:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1318:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2054,
                        2055
                      ],
                      "referencedDeclaration": 2054,
                      "src": "1310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1340:7:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1340:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:7:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "name": "_DBCard",
                      "nodeType": "VariableDeclaration",
                      "scope": 177,
                      "src": "1358:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                        "typeString": "struct DBZCollectible.DBCard"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 144,
                        "name": "DBCard",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44,
                        "src": "1358:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DBCard_$44_storage_ptr",
                          "typeString": "struct DBZCollectible.DBCard"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1407:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "1444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1437:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": "uint64"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "_cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1472:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1502:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "DBCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1382:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DBCard_$44_storage_ptr_$",
                        "typeString": "type(struct DBZCollectible.DBCard storage pointer)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "id",
                      "birthTime",
                      "cardType",
                      "price"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1382:137:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DBCard_$44_memory",
                      "typeString": "struct DBZCollectible.DBCard memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1358:161:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "_DBCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "1541:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                          "typeString": "struct DBZCollectible.DBCard memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DBCard_$44_memory_ptr",
                          "typeString": "struct DBZCollectible.DBCard memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 155,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1530:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DBCard_$44_storage_$dyn_storage",
                          "typeString": "struct DBZCollectible.DBCard storage ref[] storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1530:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_DBCard_$44_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DBZCollectible.DBCard storage ref) returns (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1573:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1581:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "_cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "1588:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 161,
                      "name": "Created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1565:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "EmitStatement",
                  "src": "1560:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1627:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1619:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1631:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1639:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 167,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1609:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 175,
                    "name": "nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1663:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "1656:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDBCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1173:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1188:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1213:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:53:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "1244:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1243:6:0"
            },
            "scope": 202,
            "src": "1150:525:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1739:103:0",
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1749:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 193,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "1774:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1774:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "cardType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1786:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1796:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "_createDBCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "1760:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1760:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:54:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "1819:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1819:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "1831:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 194,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1402
                      ],
                      "referencedDeclaration": 1402,
                      "src": "1813:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "name": "cardType",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1695:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1719:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1694:37:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1739:0:0"
            },
            "scope": 202,
            "src": "1681:161:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 203,
        "src": "132:1712:0"
      }
    ],
    "src": "0:1845:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        }
      },
      "links": {},
      "address": "0x32dF6E24E21BB9CC9d56b0B458E4A2A811996047",
      "transactionHash": "0x731c425534e9d24ae0cecbf4f24345e628cb748b3346957e3a10cbd10418d250"
    },
    "1586535248826": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0x827049353066092bB0a850B2483dB2F7942c185e",
      "transactionHash": "0xa543dead88ae9a23951c4f87cd07e52794bbd85040266bfec02ffa308693d24b"
    },
    "1586595081586": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0xC683A9bfb3D8C8D1C2db0415F9264457A7B41415",
      "transactionHash": "0x98f14f54c3839a70ed9a3a0c1eddb2a28f51d2e4b50f254f3bd2847223936667"
    },
    "1586595196389": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0xB907F1327c2A7ABC1EF077f592De0E1025fc76b6",
      "transactionHash": "0x1e5aaabdb99926820f958bbca63d1dc73c085a769f48a5519cf8be63b68b70d9"
    },
    "1586595573345": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0x64654d1100D8654C90cc6E5273c1103f390d095B",
      "transactionHash": "0xad930483de4859297adb88588dc6a66d549bbf42fae647236d82b74056a1db79"
    },
    "1586690328083": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0xcDad8003fD6b5bf8e6e7Ff2D5Be5B8C4b98de24f",
      "transactionHash": "0xe818aad975527d33420d26759cddf93911171a4709839bedcb4b4b8b44ad02ab"
    },
    "1586708796189": {
      "events": {
        "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "cardID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "cardType",
              "type": "string"
            }
          ],
          "name": "Created",
          "type": "event",
          "signature": "0x47f66c025eea73c85dbf6e0fab1339cbfefe7e4fce8b05778c3ef4559cb2aba9"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        }
      },
      "links": {},
      "address": "0x5067A5C57Ef494793Dd60834f58dB45E4A560555",
      "transactionHash": "0xeed1ddd791e05659ce57439c83ff88b2e125950f2f6e43ce802e6d841f9bb3cb"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-04-12T16:26:55.376Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}